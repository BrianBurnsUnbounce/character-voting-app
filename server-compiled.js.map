{"version":3,"sources":["server.js"],"names":[],"mappings":";;AACA;AACA,QAAQ,gBAAR;;AAEA,IAAI,OAAQ,QAAQ,MAAR,CAAZ;AACA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,WAAW,QAAQ,kBAAR,CAAf;AACA,IAAI,SAAS,QAAQ,cAAR,CAAb;AACA,IAAI,SAAS,QAAQ,cAAR,CAAb;;AAEA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;;AAEA,IAAI,MAAM,SAAV;;AAEA,IAAI,GAAJ,CAAQ,MAAR,EAAgB,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IAApC;AACA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;AACA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB;AACvB,WAAO,KAAP,CAAa,EAAE,QAAQ,OAAO,OAAjB,EAA0B,UAAU,IAAI,GAAxC,EAAb,EAA4D,UAAS,GAAT,EAAc,gBAAd,EAAgC,WAAhC,EAA6C;AACrG,YAAI,GAAJ,EAAS;AACL,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAAI,OAAzB;AACH,SAFD,MAEO,IAAI,gBAAJ,EAAsB;AACzB,gBAAI,MAAJ,CAAW,GAAX,EAAgB,QAAhB,CAAyB,iBAAiB,QAAjB,GAA4B,iBAAiB,MAAtE;AACH,SAFM,MAEA,IAAI,WAAJ,EAAiB;AACpB,gBAAI,OAAO,SAAS,cAAT,CAAwB,MAAM,aAAN,CAAoB,OAAO,cAA3B,EAA2C,WAA3C,CAAxB,CAAX;AACA,gBAAI,OAAO,KAAK,UAAL,CAAgB,kBAAhB,EAAoC,EAAE,MAAM,IAAR,EAApC,CAAX;AACA,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB;AACH,SAJM,MAIA;AACH,gBAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,gBAArB;AACH;AACJ,KAZD;AAaH,CAdD;;AAgBA,IAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAW;AACnC,YAAQ,GAAR,CAAY,sCAAsC,IAAI,GAAJ,CAAQ,MAAR,CAAlD;AACH,CAFD","file":"server-compiled.js","sourcesContent":["\n// Babel ES6/JSX Compiler\nrequire('babel-register');\n\nvar swig  = require('swig');\nvar React = require('react');\nvar ReactDOM = require('react-dom/server');\nvar Router = require('react-router');\nvar routes = require('./app/routes');\n\nvar express = require('express');\nvar path = require('path');\nvar logger = require('morgan');\nvar bodyParser = require('body-parser');\n\nvar app = express();\n\napp.set('port', process.env.PORT || 3000);\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(function(req, res) {\n    Router.match({ routes: routes.default, location: req.url }, function(err, redirectLocation, renderProps) {\n        if (err) {\n            res.status(500).send(err.message)\n        } else if (redirectLocation) {\n            res.status(302).redirect(redirectLocation.pathname + redirectLocation.search)\n        } else if (renderProps) {\n            var html = ReactDOM.renderToString(React.createElement(Router.RoutingContext, renderProps));\n            var page = swig.renderFile('views/index.html', { html: html });\n            res.status(200).send(page);\n        } else {\n            res.status(404).send('Page Not Found')\n        }\n    });\n});\n\napp.listen(app.get('port'), function() {\n    console.log('Express server listening on port ' + app.get('port'));\n});\n\n"]}